(define map
  (lambda '(lst lmda val)
	(if (= 0 (length lst))
	  val
	  (map (rest lst) lmda (cons (lmda (first lst)) val)))))
  
(map '(1 2 3) (lambda '(v) (+ 1 v)))

;(define each
;  (lambda '(lst lmda val)
;	(if (= 0 (length lst))
;	  (if val val '())
;	  (each (rest lst) lmda (lmda (first lst))))))


;(each '(1 2 3) (lambda '(v) (display "loop" v)))
